<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Downloads the requested version of Zscaler and packages it.</string>
    <key>Identifier</key>
    <string>com.github.williamtheaker.autopkg.pkg.Zscaler</string>
    <key>Input</key>
    <dict>
        <key>NAME</key>
        <string>Zscaler</string>
        <key>VENDOR</key>
        <string>Zscaler</string>
        <!--See https://help.zscaler.com/z-app/customizing-zscaler-app-install-options-macos-->
        <!--for configuration options-->
        <!--CLOUDNAME corresponds to the value given to the cloudName switch-->
        <key>CLOUDNAME</key>
        <string></string>
        <!--DEVICETOKEN corresponds to the value given to the deviceToken switch-->
        <key>DEVICETOKEN</key>
        <string></string>
        <!--HIDEAPPUIONLAUNCH corresponds to the value given to the hideAppUIOnLaunch switch-->
        <key>HIDEAPPUIONLAUNCH</key>
        <string></string>
        <!--LAUNCHTRAY corresponds to the value given to the launchTray switch-->
        <key>LAUNCHTRAY</key>
        <string></string>
        <!--MODE corresponds to the value given to the mode switch-->
        <key>MODE</key>
        <string></string>
        <!--POLICYTOKEN corresponds to the value given to the policyToken switch-->
        <key>POLICYTOKEN</key>
        <string></string>
        <!--REINSTALLDRIVER corresponds to the value given to the reinstallDriver switch-->
        <key>REINSTALLDRIVER</key>
        <string></string>
        <!--STRICTENFORCEMENT corresponds to the value given to the strictEnforcement switch-->
        <key>STRICTENFORCEMENT</key>
        <string></string>
        <!--UNATTENDEDMODEUI corresponds to the value given to the unattendedmodeui switch-->
        <key>UNATTENDEDMODEUI</key>
        <string></string>
        <!--USERDOMAIN corresponds to the value given to the userDomain switch-->
        <key>USERDOMAIN</key>
        <string></string>
        <!--USERDOMAIN corresponds to the value given to the externalRedirect switch-->
        <key>EXTERNALREDIRECT</key>
        <string></string>
    </dict>
    <key>MinimumVersion</key>
    <string>1.0.0</string>
    <key>ParentRecipe</key>
    <string>com.github.williamtheaker.autopkg.download.Zscaler</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Processor</key>
            <string>Versioner</string>
            <key>Arguments</key>
            <dict>
               <key>input_plist_path</key>
               <string>%found_filename%/Contents/Info.plist</string>
               <key>plist_version_key</key>
               <string>CFBundleShortVersionString</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PkgRootCreator</string>
            <key>Arguments</key>
            <dict>
                <key>pkgroot</key>
                <string>%RECIPE_CACHE_DIR%/pkgroot</string>
                <key>pkgdirs</key>
                <dict/>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>FileCreator</string>
            <key>Arguments</key>
            <dict>
                <key>file_path</key>
                <string>%RECIPE_CACHE_DIR%/Scripts/postinstall</string>
                <key>file_mode</key>
                <string>0755</string>
                <key>file_content</key>
                <string>#!/bin/bash

# Script borrowed from com.github.rtrouton.pkg.zscaler
# Determine working directory
install_dir=$(dirname $0)

option_1="%CLOUDNAME%"
option_2="%DEVICETOKEN%"
option_3="%HIDEAPPUIONLAUNCH%"
option_4="%MODE%"
option_5="%POLICYTOKEN%"
option_6="%REINSTALLDRIVER%"
option_7="%STRICTENFORCEMENT%"
option_8="%UNATTENDEDMODEUI%"
option_9="%USERDOMAIN%"
option_10="%LAUNCHTRAY%"

if [[ -n "${option_1}" ]]; then
   add_option1="--cloudName ${option_1} "
fi

if [[ -n "${option_2}" ]]; then
    add_option2="--deviceToken ${option_2} "
fi

if [[ -n "${option_3}" ]]; then
    add_option3="--hideAppUIOnLaunch ${option_3} "
fi

if [[ -n "${option_4}" ]]; then
    add_option4="--mode ${option_4} "
fi

if [[ -n "${option_5}" ]]; then
    add_option5="--policyToken ${option_5} "
fi

if [[ -n "${option_6}" ]]; then
    add_option6="--reinstallDriver ${option_6} "
fi

if [[ -n "${option_7}" ]]; then
    add_option7="--strictEnforcement ${option_7} "
fi

if [[ -n "${option_8}" ]]; then
    add_option8="--unattendedmodeui ${option_8} "
fi

if [[ -n "${option_9}" ]]; then
    add_option9="--userDomain ${option_9} "
fi

if [[ -n "${option_10}" ]]; then
    add_option10="--launchTray ${option_10} "
fi

# Install the Zscaler app and configure it
"${install_dir}/Zscaler-osx-%version%-installer.app/Contents/MacOS/installbuilder.sh" ${add_option1}${add_option2}${add_option3}${add_option4}${add_option5}${add_option6}${add_option7}${add_option8}${add_option9}${add_option10}</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PkgCreator</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_request</key>
                <dict>
                    <key>pkgroot</key>
                    <string>%RECIPE_CACHE_DIR%/pkgroot</string>
                    <key>pkgname</key>
                    <string>%NAME%-%version%</string>
                    <key>pkgtype</key>
                    <string>flat</string>
                    <key>id</key>
                    <string>com.zscaler.zscaler.pkg</string>
                    <key>version</key>
                    <string>%version%</string>
                    <key>scripts</key>
                    <string>Scripts</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PathDeleter</string>
            <key>Arguments</key>
            <dict>
                <key>path_list</key>
                <array>
                    <string>%RECIPE_CACHE_DIR%/Scripts</string>
                </array>
            </dict>
        </dict>
    </array>
</dict>
</plist>
